{"version":3,"sources":["WeakAI.js","mediumAI.js","Alert.js","Game.js","App.js","serviceWorker.js","index.js"],"names":["arr_a","modifySuccessfulHits","modifyField","arr_field","a","numSelect","min","max","Math","floor","random","row","col","selectSquare","r","c","char","alert","runWeakAi","previousHit","start","previous","dir","modifyAlerts","times","console","log","checkSquares","eligible_dir","new_dir","returnChar","num_of_dir","i","next_dir","runMediumAi","Alert","props","Fragment","class","message","Game","state","battlefield","formation_count","formation_countb","storage_A","storage_B","fleetB","fleetB_logo","dir_check","dir_id","is_eligible","battlefield_mirror","setup_A","startGame","carrierB","carrierA","battleshipB","battleshipA","cruiserB","cruiserA","submarineB","submarineA","destroyerB","destroyerA","successfulHitsA","successfulHitsB","playerA_turn","playerB_turn","game_victory","setupCount","AI_diff","AI_picked","updateDifficulty","event","setState","target","value","initGame","createBattlefield","refreshBattlefield","arr","push","j","showNewbattlefield","updateFormationA","row_copy","storage_A_copy","battlefield_copy","chooseDirection","max_num","rand_num","biggest","dir_record","dir_id_clone","dir_check_clone","length","k","betweenTwoNum","countFreeSpace","storage_B_copy","count_num","temp_col","temp_row","count","directions_arr","dir_count","checkSlot","updateFormationB","direction","gamePlaySet","playerClickAt","gamePlay","setTimeout","ship","change","modifyFieldArray","symbol","B_field_copy","map","slice","this","rendered_squares","index","square","square_key","key","onClick","fires","id","countFire","type","name","onChange","renderSquares","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.a3935399.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n//function runWeakAi(arr_a , successHits , field_arr){\r\n    async function runWeakAi (arr_a, modifySuccessfulHits, modifyField , arr_field) {\r\n\r\n    let numSelect = (min , max) => {\r\n        let numGen = Math.floor(\r\n            Math.random() * (max - min + 1) + min\r\n        )\r\n    return numGen\r\n    }\r\n\r\n    let selectSquare = () => {\r\n        let row = 0;\r\n        let col = 0;\r\n    \r\n        let times = 0;\r\n    do{\r\n        //times++;\r\n        //console.log(row, col, times);\r\n        row = numSelect(0 , 5)\r\n        col = numSelect(0 , 11)  \r\n    }\r\n    while(arr_field[row][col] != '')\r\n        \r\n    return [row , col]      \r\n    }\r\n    \r\n    let [r , c] = selectSquare();\r\n\r\n    let char = '';\r\n    \r\n    //console.log(\">>>>>>> row=\",r,\"col=\",c);\r\n    if(arr_a[r][c] == ''){\r\n        //field_arr[r][c] = 'O';\r\n        await modifyField(r, c, 'O');\r\n    }\r\n    else if(arr_a[r][c] == 'C'){\r\n        char = 'C'\r\n        // field_arr[r][c] = 'X'\r\n        await modifyField(r,c,'X');\r\n        // successHits++\r\n        await modifySuccessfulHits(1);\r\n        \r\n    }\r\n    else if(arr_a[r][c] == 'B'){\r\n        char = 'B'\r\n        await modifyField(r , c , 'X')\r\n        //successHits++\r\n        await modifySuccessfulHits(1);\r\n\r\n        \r\n    }\r\n    else if(arr_a[r][c] == 'c'){\r\n        char = 'c'\r\n        await modifyField(r , c , 'X')\r\n        await modifySuccessfulHits(1);\r\n\r\n        \r\n    }\r\n    else if(arr_a[r][c] == 'S'){\r\n        char = 'S'\r\n        await modifyField(r , c , 'X')\r\n        await modifySuccessfulHits(1);\r\n\r\n        \r\n    }\r\n    else if(arr_a[r][c] == 'D'){\r\n        char = 'D'  \r\n        await modifyField(r , c , 'X')\r\n        await modifySuccessfulHits(1);\r\n\r\n        \r\n    } else {\r\n        alert(\"Space already shot at\");\r\n    }\r\n    \r\nreturn char\r\n}\r\n\r\n\r\nexport default runWeakAi;\r\n","import React from 'react'\r\n\r\nlet previousHit = false; //This is a state ==> the past state\r\nlet start = [-1, -1];\r\nlet previous = [-1, -1];\r\nlet dir = 0;\r\n\r\n\r\nasync function runMediumAi(arr_a , modifySuccessfulHits , modifyField , arr_field , modifyAlerts){\r\n    \r\n    //Function to select a random number between to values\r\n    let numSelect = (min , max) => {\r\n        let numGen = Math.floor(\r\n            Math.random() * (max - min + 1) + min\r\n        )\r\n    return numGen\r\n    }\r\n\r\n    //Function to select an empty space in a 6x12 array\r\n    let selectSquare = () => {\r\n        let row = 0;\r\n        let col = 0;\r\n    \r\n        let times = 0;\r\n    do{\r\n        times++;\r\n        console.log(row, col, times);\r\n        row = numSelect(0 , 5)\r\n        col = numSelect(0 , 11)  \r\n    }\r\n    while(arr_field[row][col] != '')\r\n        \r\n    return [row , col]      \r\n    }\r\n\r\n    //Function that checks the storage_A array for the specified row and col if there is something placed in there\r\n    let checkSquares = async (r , c , arr_a) => {\r\n        console.log(\"Checking at \",r,c);\r\n        let char = ''\r\n\r\n        if(arr_a[r][c] == 'C'){\r\n            char = 'C'\r\n            await modifyField(r,c,'X');\r\n            await modifySuccessfulHits(1);\r\n        }\r\n        else if(arr_a[r][c] == 'B'){\r\n            char = 'B'\r\n            await modifyField(r,c,'X');\r\n            await modifySuccessfulHits(1);\r\n        }\r\n        else if(arr_a[r][c] == 'c'){\r\n            char = 'c'\r\n            await modifyField(r,c,'X');\r\n            await modifySuccessfulHits(1);  \r\n        }\r\n        else if(arr_a[r][c] == 'S'){\r\n            char = 'S'\r\n            await modifyField(r,c,'X');\r\n            await modifySuccessfulHits(1);   \r\n        }\r\n        else if(arr_a[r][c] == 'D'){\r\n            char = 'D'\r\n            await modifyField(r,c,'X');\r\n            await modifySuccessfulHits(1);  \r\n        }\r\n        else{\r\n            char = 'O'\r\n        }\r\n    return char\r\n    }\r\n\r\n    //Checks all the available directions for the given row and col passed in as parameters\r\n    let eligible_dir = (r , c) => {\r\n        // eligible_dir = [0 , 0 , 0 , 0] ==> [left  right  top  down]\r\n        let dir_num = [0 , 0 , 0 , 0];\r\n    \r\n        if(r == 0){\r\n            if(c == 0){\r\n                dir_num = [0 , 1 , 0 , 1];\r\n            }\r\n            else if(c == 11){\r\n                dir_num = [1 , 0 , 0 , 1]\r\n            }\r\n            else{\r\n                dir_num = [1 , 1 , 0 , 1];\r\n            }\r\n        }\r\n        else if(r == 5){\r\n            if(c == 0){\r\n                dir_num = [0 , 1 , 1 , 0];\r\n            }\r\n            else if(c == 11){\r\n                dir_num = [1 , 0 , 1 , 0]\r\n            }\r\n            else{\r\n                dir_num = [1 , 1 , 1 , 0]\r\n            }\r\n        }\r\n        else{\r\n            if(c == 0){\r\n                dir_num = [0 , 1 , 1 , 1]\r\n            }\r\n            else if(c == 11){\r\n                dir_num = [1 , 0 , 1 , 1]\r\n            }\r\n            else{\r\n                dir_num = [1 , 1 , 1 , 1]\r\n            }\r\n        }\r\n    return dir_num\r\n    }\r\n\r\n    let new_dir = -1;\r\n    let returnChar = ''\r\n    while (new_dir==-1) {\r\n          // let r , c = 0\r\n    //If this is player B's first hit or if the previous hit was a missed\r\n    if(previousHit == false){\r\n        let [r , c] = selectSquare()\r\n        console.log(\"previous Hit == false\");\r\n        console.log(\"r=\",r, \"c=\",c);\r\n        console.log(arr_a)\r\n\r\n        //If the previous hit was a miss and this hit found a target\r\n        if(arr_a[r][c] != ''){\r\n            \r\n            previousHit = true;\r\n            start = [r,c];\r\n            previous = [r,c];\r\n            \r\n            //Decide on a direction as to where to check for the next shot\r\n            dir = Math.floor(Math.random() * 4)//Returns a random integer from 0 to 3\r\n            console.log('dir number = ' , dir)\r\n            console.log('Previous hit = ' , previousHit , '||||||' , 'start = ' , start , '||||||'  , 'previous = ' , previous)  \r\n\r\n            returnChar = await checkSquares(r , c , arr_a);\r\n        }\r\n        else{\r\n            let msg = 'AI missed'\r\n            await modifyField(r, c, 'O');\r\n            returnChar =  await checkSquares(r , c , arr_a);\r\n        }\r\n    } \r\n    else{\r\n        let num_of_dir = [];\r\n        let [r,c] = previous;\r\n        num_of_dir = eligible_dir(previous[0] , previous[1])\r\n        console.log('num_of_dir = ' , num_of_dir)\r\n        console.log('Current dir = ' , dir)\r\n        console.log('r = ' , r , 'c = ' , c) \r\n       // -1 means no direction selected\r\n        // while(num_of_dir[dir] != 1){\r\n        //     dir = (dir + 1) % 4\r\n        // }\r\n        \r\n        //Decide on the next direction for the next player B turn first\r\n        for (let i = 0; i < 4; i++) {\r\n            let next_dir = (dir+i) % 4;\r\n            if (next_dir==0 && num_of_dir[next_dir]==1) {\r\n                if (arr_field[r][c-1]==\"\") {\r\n                    new_dir = next_dir\r\n                    break;\r\n                }\r\n            } else if (next_dir==1 && num_of_dir[next_dir]==1) {\r\n                if (arr_field[r][c+1]==\"\") {\r\n                    new_dir = next_dir\r\n                    break;\r\n                }\r\n            } else if (next_dir==2 && num_of_dir[next_dir]==1) {\r\n                if (arr_field[r-1][c]==\"\") {\r\n                    new_dir = next_dir;\r\n                    break;\r\n                }\r\n            } else if (next_dir==3 && num_of_dir[next_dir]==1) {\r\n                if (arr_field[r+1][c]==\"\") {\r\n                    new_dir = next_dir\r\n                    break;\r\n                }\r\n            }            \r\n        }\r\n\r\n        //If all directions cannot work and previous != starting point\r\n        if (new_dir==-1 && previous[0] != start[0] && previous[1] != start[1]) {\r\n            previous[0] = start[0];\r\n            previous[1] = start[1];\r\n            console.log(\"Reverting to previous position\");\r\n             continue;\r\n        } else if (new_dir==-1) {\r\n            previousHit = false;\r\n            console.log(\"Back to random\")\r\n            continue;\r\n        }\r\n      \r\n        console.log(\"New direction=\", new_dir);\r\n        dir = new_dir;\r\n        if(dir == 0){\r\n            c--\r\n            returnChar = await checkSquares(r , c , arr_a);\r\n            previous = [r , c]\r\n        }\r\n        else if(dir == 1){\r\n            c++\r\n            returnChar = await checkSquares(r , c , arr_a);\r\n            previous = [r , c]\r\n        }\r\n        else if(dir == 2){\r\n            r--\r\n            returnChar = await checkSquares(r , c , arr_a);\r\n            previous = [r , c]\r\n        }\r\n        else{\r\n            r++\r\n            returnChar = await checkSquares(r , c , arr_a);\r\n            previous = [r , c]\r\n        }\r\n\r\n\r\n        if (returnChar == 'O')\r\n        {\r\n            if (previous[0]==start[0] && previous[1]==start[1]) {\r\n                previousHit=false;\r\n                break;\r\n            }\r\n            else {\r\n                previous[0] = start[0];\r\n                previous[1] = start[1];\r\n                modifyField(r,c,'O')\r\n            }\r\n        }\r\n        // if(returnChar == 'O'){\r\n        //     previousHit = false;\r\n        //     previous[0] = start\r\n        // }\r\n    }\r\n        // code for using the start coordinate and check top, down, left, right direction\r\n        // eligible_dir = [0 , 0 , 0 , 0] ==> [left  right  top  down]\r\nreturn returnChar\r\n    }\r\n  \r\n}\r\n\r\nexport default runMediumAi;","import React from 'react'\r\nimport './App.css'\r\n\r\nexport default function Alert(props){\r\n    return(\r\n        <React.Fragment>\r\n            <div class = 'alert'>\r\n                {props.message}\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}","import React from \"react\";\r\nimport runWeakAi from \"./WeakAI.js\";\r\nimport runMediumAi from \"./mediumAI.js\";\r\nimport Alert from './Alert.js'\r\nimport './App.css'\r\n\r\n\r\n\r\nclass Game extends React.Component {\r\n  componentDidMount() {\r\n    this.initGame();\r\n  }\r\n\r\n  state = {\r\n    battlefield: [],\r\n    formation_count: 1,\r\n    formation_countb: 1,\r\n    storage_A: [[], [], [], [], [], [], [], [], [], [], [], []],\r\n    storage_B: [[], [], [], [], [], [], [], [], [], [], [], []],\r\n    fleetB: [5, 4, 3, 3, 2],\r\n    fleetB_logo: [\"C\", \"B\", \"c\", \"S\", \"D\"],\r\n    //In dir_check array, left, right, bottom, top\r\n    //                    west, east, south, north\r\n    dir_check: [],\r\n    dir_id: [],\r\n    eligible_dir: 0,\r\n    is_eligible: 0,\r\n\r\n    battlefield_mirror: [],\r\n    setup_A: 0,\r\n    startGame: 0,\r\n\r\n    carrierB: 5,\r\n    carrierA: 5,\r\n\r\n    battleshipB: 4,\r\n    battleshipA: 4,\r\n\r\n    cruiserB: 3,\r\n    cruiserA: 3,\r\n\r\n    submarineB: 3,\r\n    submarineA: 3,\r\n\r\n    destroyerB: 2,\r\n    destroyerA: 2,\r\n\r\n    successfulHitsA: 0,\r\n    successfulHitsB: 0,\r\n\r\n    playerA_turn: 0,\r\n    playerB_turn: 0,\r\n\r\n    game_victory: 0,\r\n\r\n    setupCount: 0,\r\n\r\n    AI_diff: 'none',\r\n    AI_picked: 0,\r\n\r\n    message:'', \r\n  };\r\n\r\n\r\n\r\n  updateDifficulty = (event) => {\r\n    this.setState({\r\n      AI_diff: event.target.value\r\n    })\r\n  } \r\n\r\n  initGame = () => {\r\n    this.setState({\r\n      battlefield: this.createBattlefield([]),\r\n      storage_A: this.createBattlefield([]),\r\n      storage_B: this.createBattlefield([]),\r\n    });\r\n  };\r\n\r\n  refreshBattlefield = () => {\r\n    this.setState({\r\n      battlefield: this.createBattlefield([]),\r\n    });\r\n  };\r\n  createBattlefield = (arr) => {\r\n    for (let i = 0; i < 12; i++) {\r\n      arr.push([]);\r\n      for (let j = 0; j < 12; j++) {\r\n        arr[i].push(\"\");\r\n      }\r\n    }\r\n    return arr;\r\n  };\r\n\r\n  showNewbattlefield = () => {\r\n    this.setState({\r\n      battlefield_mirror: this.createBattlefield([]),\r\n    });\r\n  };\r\n\r\n  renderSquares(row) {\r\n    let rendered_squares = [];\r\n    if (this.state.setup_A == 0 && this.state.startGame == 0) {\r\n      for (let index = 0; index < this.state.storage_A[row].length; index++) {\r\n        let square = this.state.storage_A[row][index];\r\n        let square_key = row * 10 + index;\r\n        rendered_squares.push(\r\n          <td\r\n            key={square_key}\r\n            onClick={() => {\r\n              this.updateFormationA(row, index);\r\n            }}\r\n          >\r\n            {square}\r\n          </td>\r\n        );\r\n      }\r\n    } else if (this.state.setup_A == 1 && this.state.startGame == 0) {\r\n      for (let index = 0; index < this.state.storage_B[row].length; index++) {\r\n        let square = this.state.storage_B[row][index];\r\n        let square_key = row * 10 + index;\r\n        rendered_squares.push(\r\n          <td\r\n            key={square_key}\r\n            onClick={() => {\r\n              this.updateFormationB();\r\n            }}\r\n          >\r\n            {square}\r\n          </td>\r\n        );\r\n      }\r\n    } else if (this.state.setup_A == 1 && this.state.startGame == 1) {\r\n      for (let index = 0; index < this.state.battlefield_mirror[row].length; index++) {\r\n        let square = this.state.battlefield_mirror[row][index];\r\n        let square_key = row * 10 + index;\r\n        rendered_squares.push(\r\n          <td\r\n            key={square_key}\r\n            onClick={() => {\r\n              this.playerClickAt(row, index);\r\n            }}\r\n          >\r\n            {square}\r\n          </td>\r\n        );\r\n      }\r\n    } else {\r\n      alert(\"Oopsies, please refresh\");\r\n    }\r\n\r\n    return rendered_squares;\r\n  }\r\n\r\n  updateFormationA = async (row, col) => {\r\n    let row_copy = [...this.state.battlefield[row]];\r\n    let storage_A_copy = [...this.state.storage_A];\r\n\r\n    if ((this.state.setup_A == 0) && (row <= 5)) {\r\n      if (row_copy[col] == \"\" && this.state.formation_count <= 5) {\r\n        row_copy[col] = \"C\";\r\n        storage_A_copy[row][col] = \"C\";\r\n      } else if (\r\n        row_copy[col] == \"\" &&\r\n        this.state.formation_count >= 6 &&\r\n        this.state.formation_count <= 9\r\n      ) {\r\n        row_copy[col] = \"B\";\r\n        storage_A_copy[row][col] = \"B\";\r\n      } else if (\r\n        row_copy[col] == \"\" &&\r\n        this.state.formation_count >= 10 &&\r\n        this.state.formation_count <= 12\r\n      ) {\r\n        row_copy[col] = \"c\";\r\n        storage_A_copy[row][col] = \"c\";\r\n      } else if (\r\n        row_copy[col] == \"\" &&\r\n        this.state.formation_count >= 13 &&\r\n        this.state.formation_count <= 15\r\n      ) {\r\n        row_copy[col] = \"S\";\r\n        storage_A_copy[row][col] = \"S\";\r\n      } else if (\r\n        row_copy[col] == \"\" &&\r\n        this.state.formation_count >= 16 &&\r\n        this.state.formation_count <= 17\r\n      ) {\r\n        row_copy[col] = \"D\";\r\n        storage_A_copy[row][col] = \"D\";\r\n      } else {\r\n        return;\r\n      }\r\n      let battlefield_copy = [...this.state.battlefield];\r\n      battlefield_copy[row] = row_copy;\r\n\r\n      await this.setState({\r\n        battlefield: battlefield_copy,\r\n        formation_count: ++this.state.formation_count,\r\n        storage_A: storage_A_copy,\r\n      });\r\n\r\n      if (this.state.formation_count == 18) {\r\n        await this.setState({\r\n          setup_A: 1,\r\n          battlefield_mirror: [...this.state.storage_A],\r\n        });\r\n        alert('CLICK ON BATTLEFIELD TO PROCEED')\r\n      }\r\n      \r\n    }\r\n    else{\r\n      alert(\"This is the enemy territory!\")\r\n    }\r\n  };\r\n\r\n  chooseDirection = async (max_num) => {\r\n    let rand_num = 0;\r\n    let biggest = 0;\r\n    let dir_record = 0;\r\n    let dir_id_clone = [...this.state.dir_id];\r\n    let dir_check_clone = [...this.state.dir_check];\r\n\r\n    console.log(\"Before If else statements\");\r\n    console.log(dir_check_clone);\r\n    console.log(dir_id_clone);\r\n\r\n    if (this.state.eligible_dir == 1) {\r\n      for (let i = 0; i < this.state.dir_check.length; i++) {\r\n        if (this.state.dir_check[i] == max_num) {\r\n          dir_id_clone[i] = 1;\r\n        }\r\n      }\r\n    } else {\r\n      for (let j = 0; j < this.state.dir_check.length; j++) {\r\n        if (this.state.dir_check[j] == max_num) {\r\n          dir_id_clone[j] = 1;\r\n        }\r\n      }\r\n    }\r\n    await this.setState({\r\n      dir_id: dir_id_clone,\r\n    });\r\n    console.log(\"Direction_ID\");\r\n    console.log(this.state.dir_check);\r\n    console.log(this.state.eligible_dir);\r\n    console.log(this.state.dir_id);\r\n\r\n    for (let k = 0; k < this.state.dir_id.length; k++) {\r\n      if (this.state.dir_id[k] == 1) {\r\n        rand_num = Math.floor(Math.random() * 100) + 1;\r\n        console.log(\"Generated random number = \", rand_num);\r\n        if (rand_num > biggest) {\r\n          biggest = rand_num;\r\n          console.log(\"Check rand_num\");\r\n          console.log(rand_num);\r\n          dir_record = k;\r\n        }\r\n      }\r\n    }\r\n    console.log(\"Direction chosen = \", dir_record);\r\n    return dir_record;\r\n  };\r\n\r\n  betweenTwoNum = (min, max) => {\r\n    let numGen = Math.floor(Math.random() * (max - min + 1) + min);\r\n    return numGen;\r\n  };\r\n  //Put this function as part of the loop for looping through fleet B\r\n  countFreeSpace = async (row, col, max_num, storage_B_copy) => {\r\n    let count_num = [0, 0, 0, 0];\r\n    let temp_col = 0;\r\n    let temp_row = 0;\r\n    let count = 0;\r\n    let directions_arr = [\r\n      [-1, 0],\r\n      [1, 0],\r\n      [0, 1],\r\n      [0, -1],\r\n      //Left , right, bottom, top\r\n    ];\r\n    let dir_count = 0;\r\n    console.log(\"start row = \", row, \"start col = \", col);\r\n    for (let i = 0; i < 4; i++) {\r\n      temp_row = row;\r\n      temp_col = col;\r\n      count = 0;\r\n      //1st iteration: max_num is 5\r\n\r\n      while (\r\n        temp_col >= 0 &&\r\n        temp_col <= 11 &&\r\n        temp_row >= 6 &&\r\n        temp_row <= 11\r\n      ) {\r\n        if (storage_B_copy[temp_row][temp_col] == \"\") {\r\n          count++;\r\n          if (count == max_num) {\r\n            count_num[i] = count;\r\n            break;\r\n          }\r\n        } else {\r\n          break;\r\n        }\r\n        temp_col = temp_col + directions_arr[i][0];\r\n        temp_row = temp_row + directions_arr[i][1];\r\n      }\r\n    }\r\n    for (let j = 0; j < count_num.length; j++) {\r\n      if (count_num[j] == max_num) {\r\n        dir_count++;\r\n      }\r\n    }\r\n    if (dir_count >= 1) {\r\n      await this.setState({\r\n        eligible_dir: dir_count,\r\n        dir_check: count_num,\r\n        dir_id: [0, 0, 0, 0],\r\n      });\r\n      console.log(\"count num: \", count_num);\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  checkSlot = (row, col, storage_B_copy) => {\r\n    do {\r\n      row = this.betweenTwoNum(6, 11);\r\n      col = this.betweenTwoNum(0, 11);\r\n    } while (storage_B_copy[row][col] != \"\");\r\n\r\n    return [row, col];\r\n  };\r\n\r\n  updateFormationB = async () => {\r\n    //Fill up B side of the battlefield with ''\r\n    let storage_B_copy = [...this.state.storage_B];\r\n    let row = 0;\r\n    let col = 0;\r\n\r\n    for (let r = 0; r < 12; r++) {\r\n      for (let c = 0; c < 12; c++) {\r\n        storage_B_copy[r][c] = \"\";\r\n      }\r\n    }\r\n\r\n    //fleetB_logo: ['C' , 'B' , 'c' , 'S' , 'D'],\r\n    //fleetB: ['5' , '4' , '3' , '3' , '2']\r\n\r\n    for (let i = 0; i < this.state.fleetB.length; i++) {\r\n      let direction = 0;\r\n      let is_eligible = false;\r\n      while (is_eligible == false) {\r\n        [row, col] = this.checkSlot(row, col, [...storage_B_copy]);\r\n        is_eligible = await this.countFreeSpace(\r\n          row,\r\n          col,\r\n          this.state.fleetB[i],\r\n          [...storage_B_copy]\r\n        );\r\n      }\r\n      direction = await this.chooseDirection(this.state.fleetB[i]);\r\n      console.log(\"Putting the ship in this direction = \", direction);\r\n\r\n      //In dir_check array, left, right, bottom, top\r\n      for (let j = 0; j < this.state.fleetB[i]; j++) {\r\n        console.log(\"Dir = \", direction, \"row = \", row, \"col = \", col);\r\n        storage_B_copy[row][col] = this.state.fleetB_logo[i];\r\n        if (direction == 0) {\r\n          col--;\r\n        } else if (direction == 1) {\r\n          col++;\r\n        } else if (direction == 2) {\r\n          row++;\r\n        } else {\r\n          row--;\r\n        }\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      storage_B: storage_B_copy,\r\n      playerA_turn: 1,\r\n      startGame: 1,\r\n    });\r\n    this.gamePlaySet();\r\n    alert(\"Player A may initiate the battle! May the best fleet win!\");\r\n  };\r\n\r\n  \r\n  gamePlaySet = () => {\r\n    /*this.setState({\r\n      battlefield_mirror: this.state.battlefield,\r\n    });*/\r\n    this.refreshBattlefield();\r\n  };\r\n\r\n  playerClickAt = async (row, col) => {\r\n    if (this.state.playerA_turn == 1) {\r\n      this.gamePlay(row, col);\r\n    }\r\n  };\r\n\r\n  // The statements for player A is not showing ==> 'You have missed' 'You have hit a part of ...' is not showing\r\n  gamePlay = async (row, col) => {\r\n    if(this.state.AI_diff != 'none'){\r\n    await  this.setState({\r\n        AI_picked: 1\r\n      })\r\n    }\r\n    if(this.state.AI_picked == 1){\r\n      if (this.state.playerA_turn == 1) {\r\n        if (row >= 0 && row <= 5) {\r\n          this.setState({\r\n            message: \"Oopsies, please do not commit fratricide\"\r\n          })\r\n        } else if (\r\n          this.state.battlefield[row][col] == \"X\" ||\r\n          this.state.battlefield[row][col] == \"O\" //Maybe change to battlefield mirror to show player A side\r\n        ) {\r\n          this.setState({\r\n            message: 'Please do not waste your ammunition!'\r\n          })\r\n        } else {\r\n          if (this.state.storage_B[row][col] == \"\") {\r\n            this.state.battlefield[row][col] = \"O\";\r\n\r\n          } else if (this.state.storage_B[row][col] == \"C\") {\r\n            this.state.battlefield[row][col] = \"X\";\r\n            this.setState({\r\n              carrierB: this.state.carrierB - 1,\r\n              successfulHitsA: this.state.successfulHitsA + 1,\r\n            });\r\n        \r\n            if (this.state.carrierB == 0) {\r\n              alert(\"Player B carrier is sunk!\");\r\n            }\r\n          } else if (this.state.storage_B[row][col] == \"B\") {\r\n            this.state.battlefield[row][col] = \"X\";\r\n            this.setState({\r\n              battleshipB: this.state.battleshipB - 1,\r\n              successfulHitsA: this.state.successfulHitsA + 1,\r\n            });\r\n  \r\n            if (this.state.battleshipB == 0) {\r\n              alert(\"Player B battleship is sunk!\");\r\n            }\r\n          } else if (this.state.storage_B[row][col] == \"c\") {\r\n            this.state.battlefield[row][col] = \"X\";\r\n            this.setState({\r\n              cruiserB: this.state.cruiserB - 1,\r\n              successfulHitsA: this.state.successfulHitsA + 1,\r\n              message: 'You have hit a part of a cruiser!'\r\n            });\r\n\r\n            if (this.state.cruiserB == 0) {\r\n              alert(\"Player B cruiser is sunk!\");\r\n            }\r\n          } else if (this.state.storage_B[row][col] == \"S\") {\r\n            this.state.battlefield[row][col] = \"X\";\r\n            this.setState({\r\n              submarineB: this.state.submarineB - 1,\r\n              successfulHitsA: this.state.successfulHitsA + 1,\r\n            });\r\n\r\n            if (this.state.submarineB == 0) {\r\n              alert(\"Player B submarine is sunk!\");\r\n            }\r\n          } else if (this.state.storage_B[row][col] == \"D\") {\r\n            this.state.battlefield[row][col] = \"X\";\r\n            this.setState({\r\n              destroyerB: this.state.destroyerB - 1,\r\n              successfulHitsA: this.state.successfulHitsA + 1,\r\n            }); \r\n            if (this.state.destroyerB == 0) {\r\n              alert(\"Player B destroyer is sunk!\");\r\n            }\r\n          } else {\r\n            return;\r\n          }\r\n          this.setState({\r\n            message: 'AI turn'\r\n          })\r\n\r\n          await this.setState({\r\n            playerA_turn: 0,\r\n            playerB_turn: 1,\r\n          });\r\n          setTimeout(()=>{\r\n              this.gamePlay();\r\n          }, 1000);\r\n        }\r\n      } \r\n      else{\r\n        if (this.state.playerB_turn == 1) {\r\n          // I create two clones: bfield_clone , one storageb clone \r\n          let ship = ''\r\n          let modifySuccessfulHits = async (change) => {\r\n              await this.setState({\r\n                successfulHitsB: this.state.successfulHitsB + change\r\n              })\r\n          }\r\n  \r\n          let modifyFieldArray = async (row , col , symbol) => {\r\n            let B_field_copy = [...this.state.battlefield]\r\n            B_field_copy[row][col] = symbol\r\n            await this.setState({\r\n               battlefield: B_field_copy\r\n  \r\n            })\r\n          }\r\n\r\n          if(this.state.AI_diff == 'weak'){\r\n            ship = await runWeakAi(this.state.storage_A, modifySuccessfulHits , modifyFieldArray , this.state.battlefield)\r\n\r\n          } \r\n          else if(this.state.AI_diff == 'strong'){\r\n            ship = await runMediumAi(this.state.storage_A , modifySuccessfulHits , modifyFieldArray , this.state.battlefield)\r\n          } \r\n          else{\r\n            alert(\"Please pick an AI difficulty!\")\r\n          }\r\n          \r\n  \r\n          if(ship == 'C'){\r\n            await this.setState({\r\n              carrierA: this.state.carrierA - 1\r\n            })\r\n          }\r\n          else if(ship == 'B'){\r\n            await this.setState({\r\n              battleshipA: this.state.battleshipA - 1\r\n            })\r\n          }\r\n          else if(ship == 'c'){\r\n            await this.setState({\r\n              cruiserA: this.state.cruiserA - 1\r\n            })\r\n          }\r\n          else if(ship == 'S'){\r\n            await this.setState({\r\n              submarineA: this.state.submarineA - 1\r\n            })\r\n          }\r\n          else if(ship == 'D'){\r\n            await this.setState({\r\n              destroyerA: this.state.destroyerA - 1\r\n            })\r\n          }\r\n    \r\n  \r\n          if(this.state.carrierA == 0 && ship == 'C'){\r\n            alert(\"Player A carrier is sunk!\")\r\n          }\r\n          else if(this.state.battleshipA === 0 && ship == 'B'){\r\n            alert(\"Player A battleship is sunk!\")\r\n          }\r\n          else if(this.state.cruiserA === 0 && ship == 'c'){\r\n            alert(\"Player A cruiser is sunk!\")\r\n          }\r\n          else if(this.state.submarineA === 0 && ship == 'S'){\r\n            alert(\"Player A submarine is sunk!\")\r\n          }\r\n          else if(this.state.destroyerA === 0 && ship == 'D'){\r\n            alert(\"Player A destroyer is sunk!\")\r\n          }\r\n  \r\n  \r\n          await this.setState({\r\n            message: 'It is your turn!'\r\n          })\r\n\r\n          let battlefield_mirror = this.state.storage_A.map(function(arr){\r\n            return arr.slice();\r\n          })\r\n          // double for loop\r\n          for(let i = 0; i < 12; i++){\r\n            for(let j = 0; j < 12; j++){\r\n              if(this.state.battlefield[i][j] == 'X' || this.state.battlefield[i][j] == 'O'){\r\n                battlefield_mirror[i][j] = this.state.battlefield[i][j]\r\n              }\r\n            }\r\n          }\r\n\r\n          // go through each square in this.state.battlefield\r\n          // if the square has X or O copy over to the battlefield_mirror\r\n  \r\n          this.setState({\r\n            playerA_turn: 1,\r\n            playerB_turn: 0,\r\n            battlefield_mirror: battlefield_mirror\r\n          });\r\n        }\r\n      }\r\n  \r\n    }\r\n    else{\r\n      alert(\"Please choose AI difficulty before proceeding\")\r\n    }\r\n    \r\n\r\n    \r\n    if((this.state.successfulHitsA == 17) && (this.state.game_victory != 1)){\r\n        alert(\"Player A is the king of the battlefield! Restarting game....\")\r\n        this.initGame();\r\n    }\r\n    else if((this.state.successfulHitsB== 17) && (this.state.game_victory != 1)){\r\n        alert(\"AI is the king of the battlefield! Restarting game....\")\r\n        this.initGame();\r\n    }\r\n    else{\r\n        return\r\n    }\r\n        \r\n  }\r\n\r\n  countFire() {\r\n    let fires = 0;\r\n    for (let r=0; r<12; r++) {\r\n      for (let c=0; c<12; c++) {\r\n        if (this.state.battlefield[r][c] !== \"\") {\r\n          fires++;\r\n        }\r\n      }\r\n    }\r\n    return fires;\r\n  }\r\n\r\n  render() {\r\n    if (this.state.battlefield.length == 0) {\r\n      return <div></div>;\r\n    }\r\n    return (\r\n\r\n      <div>\r\n        <div id = 'header'>Welcome to battleship</div>\r\n\r\n        <div id = 'container'>\r\n          <div class = 'statements'>\r\n\r\n            <p id = 'tracker'>\r\n              <label>Shots fired: </label>{this.countFire()} <label>(Ignore this number during setup process)</label>\r\n\r\n              <br/>\r\n              <br/>\r\n            \r\n              {this.state.startGame ? this.state.playerA_turn ? <p>Player A's turn</p> : <p>Player B's turn</p> : null}\r\n\r\n              <br/>\r\n\r\n              <label id ='diff'>Choose AI difficulty:</label>\r\n              <br/>\r\n              <br/>\r\n\r\n\r\n                <div class = 'options'>\r\n                  <input type = 'radio' value = 'weak' name = 'level' onChange = {this.updateDifficulty}/>\r\n                  <label id = \"weak\">Weak</label>\r\n                  <span class = \"checkmark\"></span>\r\n                </div>\r\n\r\n                <br/>\r\n                <br/> \r\n\r\n                <div class = \"options\">\r\n                  <input type = 'radio' value = 'strong' name = 'level' onChange = {this.updateDifficulty}/>\r\n                  <label id = \"strong\">Strong</label>\r\n                  <span class = \"checkmark\"></span>\r\n                </div>\r\n               \r\n\r\n               \r\n            </p>\r\n\r\n          </div>\r\n\r\n          <br/>\r\n\r\n          <div>\r\n            <p id = 'symbols'>\r\n                X = Hit ,\r\n                O = Miss\r\n            </p>\r\n          </div>\r\n\r\n          <Alert message = {this.state.message}/>\r\n          <br/>\r\n          <div id = 'layout'>\r\n            <table id = 'battlefield'> \r\n              <tr class = 'A_side'><label>Row 0</label> {this.renderSquares(0)}</tr>   \r\n\r\n              <tr class = 'A_side'><label>Row 1</label> {this.renderSquares(1)}</tr>\r\n\r\n              <tr class = 'A_side'><label>Row 2</label> {this.renderSquares(2)}</tr>\r\n\r\n              <tr class = 'A_side'><label>Row 3</label> {this.renderSquares(3)}</tr>\r\n\r\n              <tr class = 'A_side'><label>Row 4</label> {this.renderSquares(4)}</tr>\r\n\r\n              <tr class = 'A_side'><label>Row 5</label> {this.renderSquares(5)}</tr>\r\n\r\n              <br/>\r\n\r\n              <tr class = 'B_side'><label>Row 6</label> {this.renderSquares(6)}</tr>\r\n\r\n              <tr class = 'B_side'><label>Row 7</label> {this.renderSquares(7)}</tr>\r\n\r\n              <tr class = 'B_side'><label>Row 8</label> {this.renderSquares(8)}</tr>\r\n\r\n              <tr class = 'B_side'><label>Row 9</label> {this.renderSquares(9)}</tr>\r\n\r\n              <tr class = 'B_side'><label>Row 10</label> {this.renderSquares(10)}</tr>\r\n\r\n              <tr class = 'B_side'><label>Row 11</label> {this.renderSquares(11)}</tr>\r\n\r\n            </table>\r\n\r\n            <h1 id = 'instructions'>\r\n              <p>\r\n                Battleships instructions:\r\n                <br/>\r\n                Player A = you\r\n                Player B = AI\r\n              </p>\r\n              <p>\r\n                Basic Game Setup:\r\n                <br/>\r\n                <br/>\r\n                Carrier  -----  5 spaces (Marked by uppercase character 'C')\r\n                <br/>\r\n                <br/>\r\n                Battleship  -----  4 spaces (Marked by uppercase character 'B')\r\n                <br/>\r\n                <br/>\r\n                Cruiser  -----  3 spaces (Marked by lowercase character 'c')\r\n                <br/>\r\n                <br/>\r\n                Submarine  -----  3 spaces (Marked by uppercase character 'S')\r\n                <br/>\r\n                <br/>\r\n                Destroyer  -----  2 spaces (Marked by lowercase character 'D')\r\n                <br/>\r\n                <br/>\r\n                Your Role as Player A:\r\n                  <br/>\r\n                  <br/>\r\n                  1) Choose your opponent AI difficulty\r\n                  <br/>\r\n                  <br/>\r\n                  2) Choose any space between rows 0 to 5 to place your fleet.\r\n                  <br/>\r\n                  <br/>\r\n                  3) You can place them vertically/horizontally but not diagonally as per the actual board game. \r\n                  <br/>\r\n                  <br/>\r\n                  4) Once done, click on the board once to continue\r\n              </p>\r\n              <p>\r\n                  <br/>\r\n                  <br/>\r\n                  Basic Gameplay:\r\n                    <br/>\r\n                    <br/>\r\n                    During your turn, choose any space between row 6 to 11 to fire at \r\n                    <br/>\r\n                    <br/>\r\n                    Any ship you sank will be announced\r\n                    <br/>\r\n                    <br/>\r\n                    Sink all of your AI opponent ships to win the game\r\n              </p>\r\n            </h1>\r\n          </div>\r\n\r\n          <br/>\r\n\r\n        </div>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","import React from 'react';\nimport './App.css'\nimport Game from './Game.js'\n//import PageTwo from './PageTwo.js'\n//import PageThree from './PageThree.js'\n//import Nav from './Nav.js'\n\n/*\nimport{\n  BrowserRouter as Router,\n  Switch,\n  Route, \n  Link,\n}from 'react-router-dom'\n*/\nfunction App() {\n  return (\n    <div>\n      <Game/>\n      {/*  This part is commented out cause we do not want the Navbar   */ }\n      {\n        /*\n      <Router>\n          <Nav/>\n        <Switch>\n\n          <Route path = \"/\" exact>\n            \n          </Route>\n\n          <Route path = \"page-two\" exact>\n            <PageTwo></PageTwo>\n          </Route>\n\n          <Route path = \"page-three\" exact>\n            <PageThree></PageThree>\n          </Route>\n\n        </Switch>\n      </Router>\n      */\n      } \n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}